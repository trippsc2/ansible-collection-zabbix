---
- name: Prepare
  hosts:
    - subjects
  pre_tasks:
    - name: Set OS variables (Debian-based)
      when:
        - ansible_os_family == 'Debian'
      ansible.builtin.set_fact:
        _pgsql_home_directory: /var/lib/postgresql
        _cert_directory: /etc/ssl/certs
        _private_key_directory: /etc/ssl/private

    - name: Set OS variables (EL)
      when:
        - ansible_os_family == 'RedHat'
      ansible.builtin.set_fact:
        _pgsql_home_directory: /var/lib/pgsql
        _cert_directory: /etc/pki/tls/certs
        _private_key_directory: /etc/pki/tls/private

    - name: Create postgres group
      become: true
      ansible.builtin.group:
        name: postgres
        state: present
        system: true

    - name: Create postgres user
      become: true
      ansible.builtin.user:
        name: postgres
        group: postgres
        system: true
        shell: /usr/sbin/nologin
        password: '!'
        password_lock: true
        home: "{{ _pgsql_home_directory }}"
        createhome: false
        comment: PostgreSQL Server
        state: present
  roles:
    - role: trippsc2.hashi_vault.testing_ca
    - role: trippsc2.hashi_vault.signed_certificate
      vars:
        cert_certificate_path: "{{ _cert_directory }}/server.crt"
        cert_private_key_path: "{{ _private_key_directory }}/server.key"
        cert_certificate_owner: postgres
        cert_certificate_group: postgres
        cert_private_key_owner: postgres
        cert_private_key_group: postgres
        cert_common_name: "{{ inventory_hostname }}"
        cert_subject_alternative_names:
          - "DNS:{{ inventory_hostname }}"
          - DNS:localhost
          - "IP:{{ ansible_host }}"
          - IP:127.0.0.1
        cert_copy_ca_chain: true
        cert_ca_chain_path: >-
          {{ '/etc/pki/ca-trust/source/anchors/ca_chain.crt' if ansible_os_family == 'RedHat' else '/usr/local/share/ca-certificates/ca_chain.crt' }}
