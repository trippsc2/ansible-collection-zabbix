---
dependency:
  name: galaxy
driver:
  name: vagrant
  provider:
    name: libvirt
  cachier: machine
  parallel: true
platforms:
  - name: zabbix
    box: jtarpley/rocky8_cis
    memory: 2048
    cpus: 2
    groups:
      - zabbix_server
  - name: linux
    box: jtarpley/${MOLECULE_BOX:-rocky8_cis}
    memory: 2048
    cpus: 2
    groups:
      - subjects
provisioner:
  name: ansible
  inventory:
    group_vars:
      all:
        vault_token: 47542cbc-6bf8-4fba-8eda-02e0a0d29a0a
        vault_url: "http://{{ hostvars['zabbix'].ansible_host }}:8200"
        zabbix_host: "{{ hostvars['zabbix'].ansible_host }}"
        zabbix_port: 443
        zabbix_ssl: true
        zabbix_validate_certs: false
        zabbix_username: test
        zabbix_password: SecurePassword1234!
        _zbxagent_ca_file: >-
          {{ '/etc/pki/ca-trust/source/anchors/vault.crt' if ansible_os_family == 'RedHat' else '/usr/local/share/ca-certificates/vault.crt' }}
      subjects:
        zbxagent_install_ember_plus_plugin: true
        zbxagent_install_mongodb_plugin: true
        zbxagent_install_mssql_plugin: true
        zbxagent_install_pgsql_plugin: true
        zbxagent_servers:
          - "{{ hostvars['zabbix'].ansible_host }}"
        zbxagent_active_servers:
          - "{{ hostvars['zabbix'].ansible_host }}"
        zbxagent_tls_connect: cert
        zbxagent_tls_accept: cert
        zbxagent_tls_ca_file: "{{ _zbxagent_ca_file }}"
        zbxagent_tls_cert_file: >-
          {{ '/etc/pki/tls/certs/zabbix-agent.crt' if ansible_os_family == 'RedHat' else '/etc/ssl/certs/zabbix-agent.crt' }}
        zbxagent_tls_key_file: >-
          {{ '/etc/pki/tls/private/zabbix-agent.key' if ansible_os_family == 'RedHat' else '/etc/ssl/private/zabbix-agent.key' }}
        zbx_host_groups:
          - Linux servers
        zbx_host_interfaces:
          - type: agent
            ip: "{{ hostvars['linux'].ansible_host }}"
            useip: 1
            main: 1
            port: '10050'
        zbx_host_templates:
          - Linux by Zabbix agent
        _zbxagent_cert_file: /tmp/zabbix-agent.crt
      zabbix_server:
        pgsql_major_version: ${MOLECULE_PGSQL_MAJOR_VERSION:-16}
        pgsql_ssl: true
        pgsql_ssl_ca_file: "{{ _zbxagent_ca_file }}"
        pgsql_ssl_cert_file: >-
          {{ '/etc/pki/tls/certs/pgsql.crt' if ansible_os_family == 'RedHat' else '/etc/ssl/certs/pgsql.crt' }}
        pgsql_ssl_key_file: >-
          {{ '/etc/pki/tls/private/pgsql.key' if ansible_os_family == 'RedHat' else '/etc/ssl/private/pgsql.key' }}
        pgsql_log_to_csvlog: true
        pgsql_log_to_syslog: true
        pgsql_vault_ssl_mode: verify-full
        pgsql_vault_access_hostname: '127.0.0.1'
        zbxserver_major_version: '${MOLECULE_ZABBIX_MAJOR_VERSION:-7.0}'
        zbxserver_pgsql_standalone: false
        zbxserver_database_type: ${MOLECULE_ZABBIX_DATABASE_TYPE:-postgresql}
        zbxserver_database_host: localhost
        zbxserver_database_port: 5432
        zbxserver_database_use_ssl: true
        zbxserver_database_ca_file: "{{ _zbxagent_ca_file }}"
        zbxserver_vault_token: "{{ vault_token }}"
        zbxserver_vault_url: "{{ vault_url }}"
        zbxserver_web_server_certificate_path: >-
          {{ '/etc/pki/tls/certs/zabbix-web.crt' if ansible_os_family == 'RedHat' else '/etc/ssl/certs/zabbix-web.crt' }}
        zbxserver_web_server_private_key_path: >-
          {{ '/etc/pki/tls/private/zabbix-web.key' if ansible_os_family == 'RedHat' else '/etc/ssl/private/zabbix-web.key' }}
        zbxserver_tls_ca_file: "{{ _zbxagent_ca_file }}"
        zbxserver_tls_cert_file: >-
          {{ '/etc/pki/tls/certs/zabbix-server.crt' if ansible_os_family == 'RedHat' else '/etc/ssl/certs/zabbix-server.crt' }}
        zbxserver_tls_key_file: >-
          {{ '/etc/pki/tls/private/zabbix-server.key' if ansible_os_family == 'RedHat' else '/etc/ssl/private/zabbix-server.key' }}
        zbxserver_server_host: '127.0.0.1'
        zbxserver_allow_unsupported_db_versions: true # TimescaleDB can give false positives
        zbxserver_db_tls_connect: verify_full
        zbxserver_db_tls_ca_file: "{{ _zbxagent_ca_file }}"
        zbxserver_unmanaged_users:
          - username: "{{ zabbix_username }}"
            password: "{{ zabbix_password }}"
            role_name: Super admin role
            groups:
              - Internal
verifier:
  name: ansible
