---
- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ _file }}"
  vars:
    _file: "{{ lookup('first_found', _params) }}"
    _params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_release | default('') }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}.yml"
        - fallback.yml
      paths:
        - "{{ role_path }}/vars"

- name: Validate OS is supported
  ansible.builtin.assert:
    that:
      - _zbxserver_os_is_supported
    fail_msg: "This role does not support {{ ansible_distribution }} {{ ansible_distribution_version }}."
    success_msg: "This role supports {{ ansible_distribution }} {{ ansible_distribution_version }}."

- name: Validate Zabbix major version
  ansible.builtin.assert:
    that:
      - zbxserver_major_version in _zbxserver_supported_major_versions
    fail_msg: "This role does not support Zabbix Server {{ zbxserver_major_version }} on {{ ansible_distribution }} {{ ansible_distribution_version }}."
    success_msg: "This role supports Zabbix Server {{ zbxserver_major_version }} on {{ ansible_distribution }} {{ ansible_distribution_version }}."

- name: Validate NGINX module version (EL)
  when:
    - ansible_os_family == 'RedHat'
    - zbxserver_nginx_module_version is defined
  ansible.builtin.assert:
    that:
      - zbxserver_nginx_module_version | string in _zbxserver_nginx_module_versions_allowed[zbxserver_major_version]
    fail_msg: "Unsupported NGINX module version '{{ zbxserver_nginx_module_version }}' for Zabbix major version '{{ zbxserver_major_version }}'. Supported versions are: {{ _zbxserver_nginx_module_versions_allowed[zbxserver_major_version] | join(', ') }}."
    success_msg: "NGINX module version '{{ zbxserver_nginx_module_version }}' for Zabbix major version '{{ zbxserver_major_version }}' is supported."

- name: Validate PHP module version (EL)
  when:
    - ansible_os_family == 'RedHat'
    - zbxserver_php_module_version is defined
  ansible.builtin.assert:
    that:
      - zbxserver_php_module_version | string in _zbxserver_php_module_versions_allowed[zbxserver_major_version]
    fail_msg: "Unsupported PHP module version '{{ zbxserver_php_module_version }}' for Zabbix major version '{{ zbxserver_major_version }}'. Supported versions are: {{ _zbxserver_php_module_versions_allowed[zbxserver_major_version] | join(', ') }}."
    success_msg: "PHP module version '{{ zbxserver_php_module_version }}' for Zabbix major version '{{ zbxserver_major_version }}' is supported."

- name: Validate Vault URL
  when:
    - zbxserver_configure_vault
  ansible.builtin.assert:
    that:
      - zbxserver_vault_url is defined
    fail_msg: Vault URL is not defined.
    success_msg: Vault URL is defined.

- name: Validate Vault token
  when:
    - zbxserver_configure_vault
  ansible.builtin.assert:
    that:
      - zbxserver_vault_token is defined
    fail_msg: Vault token is not defined.
    success_msg: Vault token is defined.

- name: Validate database CA certificate file
  when:
    - zbxserver_database_use_ssl
  ansible.builtin.assert:
    that:
      - zbxserver_database_ca_file is defined
    fail_msg: Database CA certificate file is not defined.
    success_msg: Database CA certificate file is defined.
